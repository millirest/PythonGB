# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. 
# Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, 
# чтобы все монетки лежали одной и той же стороной вверх.

# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит гербом вверх, 
# и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 1000 элементов.

# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, которые нужно перевернуть.

# coins = [0, 1, 1, 1, 1, 1]
# R = 0
# G = 0

# for i in coins:
#     if i==0: G+=1
#     else: R+=1

# if R<G: print(R)
# else: print(G)

# 2:
# count_zero = 0
# count_one = 0

# for coin in coins:
#     if coin == 0:
#         count_zero += 1
#     else:
#         count_one += 1

# if count_one > count_zero:
#     print(count_zero)
# else:
#     print(count_one)

# Задача 2

# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.

# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. 
# В результате вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# s = 4
# p = 4


# for X in range(s):
#     for Y in range(s):
#         if (X+Y==s and X*Y==p):
#             if X <= Y:
#                 print(X,Y)

# Задание 3
# Требуется вывести все целые степени двойки (т.е. числа вида 2^k), не превосходящие числа N.

n=1000
k=0
i=0
while (k < n):
    k = 2**i
    if k<=n: print(k)
    i+=1
